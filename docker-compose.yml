version: '3.9'

services:
  web:
    build: .
    command: uvicorn app.main:app --host 0.0.0.0 --port ${WEB_PORT} --reload
    volumes:
      - .:/app
      - ./poetry.lock:/app/poetry.lock:rw
    ports:
      - ${WEB_PORT}:${WEB_PORT}
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://0.0.0.0:${WEB_PORT}/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  celery:
    build: .
    command: celery -A app.celery worker --loglevel=info
    volumes:
      - .:/app
      - ./poetry.lock:/app/poetry.lock:rw
    env_file:
      - .env
    depends_on:
      - redis
      - postgres

  redis:
    image: redis:7.2-alpine
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  flower:
    build: .
    command: celery -A app.celery flower --port=${FLOWER_PORT}
    volumes:
      - .:/app
    ports:
      - ${FLOWER_PORT}:${FLOWER_PORT}
    env_file:
      - .env
    depends_on:
      - redis
      - celery

  postgres:
    image: postgres:13.13
    environment:
      - .env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: